version: '3.4'

x-proxies: &proxies
  no_proxy:
  http_proxy:
  https_proxy:
  NO_PROXY:
  HTTP_PROXY:
  HTTPS_PROXY:

x-airflow-connections: &airflow-connections
  ETL_DB_SCHEMA:
  ETL_DB_HOST:
  ETL_DB_USER:
  ETL_DB_PASSWORD:
  ETL_DB_DB:
  DEV_DB_SCHEMA:
  DEV_DB_HOST:
  DEV_DB_USER:
  DEV_DB_PASSWORD:
  DEV_DB_DB:
  AIRFLOW_DB_SCHEMA:
  AIRFLOW_DB_HOST:
  POSTGRES_USER:
  POSTGRES_PASSWORD:
  POSTGRES_DB:
  ETL_DB_URL: "${ETL_DB_SCHEMA}://${ETL_DB_USER}:${ETL_DB_PASSWORD}@${ETL_DB_HOST}/${ETL_DB_DB}"

x-airflow-volumes: &airflow-volumes
  volumes:
    - ./etl:/etl
    - ./etl/logs:/opt/airflow/logs
    - ./alembic:/alembic

services:

  # Redis as a Celery broker
  airflow-broker:
    image: redis:6.0.5-alpine

  # DB for the Airflow metadata
  airflow-db:
    build:
      context: ./
      dockerfile: docker/airflow-db/Dockerfile
    volumes:
      - postgres-airflow:/var/lib/postgresql/data
    env_file:
      - env/airflow_db.env
    ports:
      - 5431:5432

  # Main container with Airflow Webserver, Scheduler, Celery Flower
  airflow:
    build:
      context: ./
      dockerfile: docker/airflow/Dockerfile
      args:
        <<: *proxies
    <<: *airflow-volumes
    environment:
      <<: *airflow-connections
    depends_on:
      - airflow-db
      - airflow-broker
    command: >
      -c "/entrypoint initdb &&
          airflow variables --set dbs_to_update "dev_db" &&
          airflow connections --add --conn_id dev_db --conn_uri "$${DEV_DB_SCHEMA}://$${DEV_DB_USER}:$${DEV_DB_PASSWORD}@$${DEV_DB_HOST}/$${DEV_DB_DB}" &&
          (/entrypoint webserver &) &&
          (/entrypoint flower &) &&
          /entrypoint scheduler"
    ports:
      # Celery Flower
      - 5551:5555
      # Airflow Webserver
      - 8080:8080

  # Celery worker, will be scaled using `--scale=n`
  airflow-worker:
    build:
      context: ./
      dockerfile: docker/worker/Dockerfile
    <<: *airflow-volumes
    environment:
      <<: *airflow-connections
    # wait for Airflow DB to be be initialized in airflow container
    command: >
       -c " sleep 10 &&
           /entrypoint worker"
    ports:
      - 8793:8793
    depends_on:
      - airflow
      - airflow-db
      - airflow-broker

volumes:
  postgres-airflow:
